/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenFarmV2,
  TokenFarmV2Interface,
} from "../../contracts/TokenFarmV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DynamicRewardsToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "RewardPerBlockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxReward",
        type: "uint256",
      },
    ],
    name: "RewardRangeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocksPassed",
        type: "uint256",
      },
    ],
    name: "RewardsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "processed",
        type: "uint256",
      },
    ],
    name: "RewardsDistributedAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "claimFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dappToken",
    outputs: [
      {
        internalType: "contract DAppToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeRewardsAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dynamicRewards",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DAppToken",
        name: "_dappToken",
        type: "address",
      },
      {
        internalType: "contract LPToken",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimFee",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract LPToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "pendingRewardsView",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setClaimFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setDynamicRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "setRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxReward",
        type: "uint256",
      },
    ],
    name: "setRewardRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakersInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "checkpoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingRewards",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasStaked",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isStaking",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506116ab8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638ae39cac116100de578063b6b55f2511610097578063e766c83511610071578063e766c8351461034a578063f2fde38b14610353578063fd5e6dd114610366578063ffd14bc21461037957600080fd5b8063b6b55f251461031c578063bb872b4a1461032f578063db03e2271461034257600080fd5b80638ae39cac1461026e5780638da5cb5b146102775780639003adfe1461028a578063943a18951461029357806399d32fc4146102a6578063aba78c16146102af57600080fd5b80633de34a3d116101305780633de34a3d146101e5578063476343ee146101f85780635eb186f8146102005780635fcbd2851461022b5780637ed7a7e11461023e57806386489ba91461025b57600080fd5b806306fdde031461017857806309be19f91461019657806311beef28146101ad5780632e75ab50146101c2578063372500ab146101d55780633ccfd60b146101dd575b600080fd5b610180610382565b60405161018d91906112ce565b60405180910390f35b61019f60055481565b60405190815260200161018d565b6101c06101bb36600461132d565b610410565b005b6101c06101d036600461134a565b61048b565b6101c06104fb565b6101c0610690565b6101c06101f3366004611363565b610816565b6101c06108f4565b600254610213906001600160a01b031681565b6040516001600160a01b03909116815260200161018d565b600354610213906001600160a01b031681565b60075461024b9060ff1681565b604051901515815260200161018d565b6101c061026936600461139a565b610a0a565b61019f60045481565b600154610213906001600160a01b031681565b61019f600a5481565b61019f6102a13660046113f3565b610bde565b61019f60095481565b6102f06102bd3660046113f3565b600c6020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b60408051958652602086019490945292840191909152151560608301521515608082015260a00161018d565b6101c061032a36600461134a565b610c97565b6101c061033d36600461134a565b610e43565b6101c0610efa565b61019f60085481565b6101c06103613660046113f3565b610ff7565b61021361037436600461134a565b6110bf565b61019f60065481565b6000805461038f90611410565b80601f01602080910402602001604051908101604052809291908181526020018280546103bb90611410565b80156104085780601f106103dd57610100808354040283529160200191610408565b820191906000526020600020905b8154815290600101906020018083116103eb57829003601f168201915b505050505081565b6001546001600160a01b031633146104435760405162461bcd60e51b815260040161043a9061144a565b60405180910390fd5b6007805460ff19168215159081179091556040519081527ffc74de8d3ec7d7da413aec6dbec19cfa59e26c7cf0d07839cd9db4c867c5d2eb906020015b60405180910390a150565b6001546001600160a01b031633146104b55760405162461bcd60e51b815260040161043a9061144a565b6103e88111156104f65760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b604482015260640161043a565b600955565b336000908152600c6020526040902060030154610100900460ff166105505760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207374616b696e6760a81b604482015260640161043a565b336000908152600c6020526040902060028101548061059e5760405162461bcd60e51b815260206004820152600a6024820152696e6f207265776172647360b01b604482015260640161043a565b6000612710600954836105b19190611484565b6105bb91906114b7565b905060006105c982846114cb565b905081600a60008282546105dd91906114de565b90915550506000600285810191909155546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b505060408051848152602081018690523393507fdacbdde355ba930696a362ea6738feb9f8bd52dfb3d81947558fd3217e23e32592500160405180910390a250505050565b336000908152600c6020526040902060030154610100900460ff166106e55760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207374616b696e6760a81b604482015260640161043a565b336000908152600c6020526040902080548061072f5760405162461bcd60e51b8152602060048201526009602482015268062616c616e63653d360bc1b604482015260640161043a565b610738336110e9565b60008083556008805483929061074f9084906114cb565b90915550506003828101805461ff00191690555460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d591906114f1565b5043600183015560405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b6001546001600160a01b031633146108405760405162461bcd60e51b815260040161043a9061144a565b6000821180156108505750818110155b61088c5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b604482015260640161043a565b600582905560068190556004548211156108a65760048290555b8060045411156108b65760048190555b60408051838152602081018390527f8d7cd90761f23af2912b733d2169842022827f4cfb9d94750ffadd9002364efb91015b60405180910390a15050565b6001546001600160a01b0316331461091e5760405162461bcd60e51b815260040161043a9061144a565b600a54806109585760405162461bcd60e51b81526020600482015260076024820152664e6f206665657360c81b604482015260640161043a565b6000600a556002546001546040516340c10f1960e01b81526001600160a01b039182166004820152602481018490529116906340c10f1990604401600060405180830381600087803b1580156109ad57600080fd5b505af11580156109c1573d6000803e3d6000fd5b50506001546040518481526001600160a01b0390911692507f78473f3f373f7673597f4f0fa5873cb4d375fea6d4339ad6b56dbd411513cb3f915060200160405180910390a250565b600d5460ff1615610a535760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161043a565b6001600160a01b03861615801590610a7357506001600160a01b03851615155b610aae5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640161043a565b838311158015610abe5750818411155b610b015760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207265776172642072616e676560601b604482015260640161043a565b600280546001600160a01b038089166001600160a01b031992831617909255600380549288169282169290921790915560018054909116331790556004849055600583905560068290556007805460ff19169055600981905560408051808201909152601a81527f50726f706f7274696f6e616c20546f6b656e204661726d2056320000000000006020820152600090610b9b9082611573565b50600d805460ff1916600117905560405133906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505050505050565b6001600160a01b0381166000908152600c602052604081206001810154801580610c085750804311155b15610c1857506002015492915050565b6008541580610c2657508154155b15610c3657506002015492915050565b6000610c4282436114cb565b90506000610c518684436111ff565b6008548554919250600091610c668585611484565b610c709190611484565b610c7a91906114b7565b9050808560020154610c8c91906114de565b979650505050505050565b60008111610cd25760405162461bcd60e51b81526020600482015260086024820152670616d6f756e743d360c41b604482015260640161043a565b336000818152600c6020526040902090610ceb906110e9565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6691906114f1565b5081816000016000828254610d7b91906114de565b925050819055508160086000828254610d9491906114de565b9091555050600381015460ff16610df857600b8054600181810183556000929092527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319163317905560038201805460ff191690911790555b60038101805461ff00191661010017905543600182015560405133907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49061080a9085815260200190565b6001546001600160a01b03163314610e6d5760405162461bcd60e51b815260040161043a9061144a565b6005548110158015610e8157506006548111155b610ebc5760405162461bcd60e51b815260206004820152600c60248201526b6f7574206f662072616e676560a01b604482015260640161043a565b600480549082905560408051828152602081018490527f842e6f2b482c6f39924c8be7b71d40631362ef78f833f0371ceb2649edc5fb1091016108e8565b6001546001600160a01b03163314610f245760405162461bcd60e51b815260040161043a9061144a565b6000805b600b54811015610fc6576000600b8281548110610f4757610f47611632565b60009182526020808320909101546001600160a01b0316808352600c909152604090912060038101549192509060ff610100909104168015610f895750805415155b15610fa957610f97826110e9565b83610fa181611648565b945050610fbc565b8060010154600003610fbc574360018201555b5050600101610f28565b506040518181527fc0b7c32b2f7bf30685be9ade07e89add11ba5dde80208a672b1fab63ef78914390602001610480565b6001546001600160a01b031633146110215760405162461bcd60e51b815260040161043a9061144a565b6001600160a01b0381166110635760405162461bcd60e51b81526020600482015260096024820152683d32b9379030b2323960b91b604482015260640161043a565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600b81815481106110cf57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600c602052604081206001810154909181900361111a57504360019091015550565b80431161112657505050565b600854158061113457508154155b1561114457504360019091015550565b600061115082436114cb565b9050600061115f858443611216565b60085485549192506000916111748585611484565b61117e9190611484565b61118891906114b7565b905080156111ee57808560020160008282546111a491906114de565b909155505060408051828152602081018590526001600160a01b038816917fe4e801442ed461792c0bdfa7f5c25444d391d67d68422437bd9005796c67cb23910160405180910390a25b438560010181905550505050505050565b600061120c848484611216565b90505b9392505050565b60075460009060ff1661122c575060045461120f565b600060055460065461123e91906114cb565b90508060000361125257505060055461120f565b6040516bffffffffffffffffffffffff1930606090811b8216602084015287901b166034820152604881018590526068810184905260009060880160408051601f198184030181529190528051602090910120905060006112b48360016114de565b6112be9083611661565b905080600554610c8c91906114de565b602081526000825180602084015260005b818110156112fc57602081860181015160408684010152016112df565b506000604082850101526040601f19601f83011684010191505092915050565b801515811461132a57600080fd5b50565b60006020828403121561133f57600080fd5b813561120f8161131c565b60006020828403121561135c57600080fd5b5035919050565b6000806040838503121561137657600080fd5b50508035926020909101359150565b6001600160a01b038116811461132a57600080fd5b60008060008060008060c087890312156113b357600080fd5b86356113be81611385565b955060208701356113ce81611385565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60006020828403121561140557600080fd5b813561120f81611385565b600181811c9082168061142457607f821691505b60208210810361144457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761149b5761149b61146e565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826114c6576114c66114a1565b500490565b8181038181111561149b5761149b61146e565b8082018082111561149b5761149b61146e565b60006020828403121561150357600080fd5b815161120f8161131c565b634e487b7160e01b600052604160045260246000fd5b601f82111561156e57806000526020600020601f840160051c8101602085101561154b5750805b601f840160051c820191505b8181101561156b5760008155600101611557565b50505b505050565b815167ffffffffffffffff81111561158d5761158d61150e565b6115a18161159b8454611410565b84611524565b6020601f8211600181146115d557600083156115bd5750848201515b600019600385901b1c1916600184901b17845561156b565b600084815260208120601f198516915b8281101561160557878501518255602094850194600190920191016115e5565b50848210156116235786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161165a5761165a61146e565b5060010190565b600082611670576116706114a1565b50069056fea2646970667358221220c48b08748e8c61fc87d1f65fbe89faa5d0b91b8c44a1b44722c02a8c9ffb73b764736f6c634300081c0033";

type TokenFarmV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFarmV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFarmV2__factory extends ContractFactory {
  constructor(...args: TokenFarmV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenFarmV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenFarmV2__factory {
    return super.connect(runner) as TokenFarmV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFarmV2Interface {
    return new Interface(_abi) as TokenFarmV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenFarmV2 {
    return new Contract(address, _abi, runner) as unknown as TokenFarmV2;
  }
}
