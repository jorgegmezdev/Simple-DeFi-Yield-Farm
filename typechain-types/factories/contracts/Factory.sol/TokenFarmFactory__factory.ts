/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenFarmFactory,
  TokenFarmFactoryInterface,
} from "../../../contracts/Factory.sol/TokenFarmFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "farm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "FarmCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract LPToken",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "contract DAppToken",
        name: "_dappToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimFee",
        type: "uint256",
      },
    ],
    name: "createFarm",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "farms",
    outputs: [
      {
        internalType: "contract TokenFarmV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506040516103ef3803806103ef833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b6103628061008d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637da470ea14610046578063ee97f7f314610075578063f7c7fa5314610088575b600080fd5b6100596100543660046102a2565b61009b565b6040516001600160a01b03909116815260200160405180910390f35b600054610059906001600160a01b031681565b6100596100963660046102d3565b6100c5565b600181815481106100ab57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805481906100dd906001600160a01b03166101f5565b6040516386489ba960e01b81526001600160a01b0389811660048301528a8116602483015260448201899052606482018890526084820187905260a48201869052919250908216906386489ba99060c401600060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385811691821790925560408051928d1683523360208401529093507f6e766a2e8ac6e7ecbc0956ba73fdf9e546312daf00a15a6817b8ca66159bd7ab92500160405180910390a2979650505050505050565b6000610202826000610208565b92915050565b6000814710156102385760405163cf47918160e01b81524760048201526024810183905260440160405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b0381166102025760405163b06ebf3d60e01b815260040160405180910390fd5b6000602082840312156102b457600080fd5b5035919050565b6001600160a01b03811681146102d057600080fd5b50565b60008060008060008060c087890312156102ec57600080fd5b86356102f7816102bb565b95506020870135610307816102bb565b95989597505050506040840135936060810135936080820135935060a090910135915056fea26469706673582212201cc22bd6589cd4cf436cf3b227255de9898749b9e5b80314008c543d74254d0a64736f6c634300081c0033";

type TokenFarmFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFarmFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFarmFactory__factory extends ContractFactory {
  constructor(...args: TokenFarmFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _master: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_master, overrides || {});
  }
  override deploy(
    _master: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_master, overrides || {}) as Promise<
      TokenFarmFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenFarmFactory__factory {
    return super.connect(runner) as TokenFarmFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFarmFactoryInterface {
    return new Interface(_abi) as TokenFarmFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenFarmFactory {
    return new Contract(address, _abi, runner) as unknown as TokenFarmFactory;
  }
}
