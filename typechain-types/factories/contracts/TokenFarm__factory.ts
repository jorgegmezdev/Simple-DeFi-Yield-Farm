/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TokenFarm, TokenFarmInterface } from "../../contracts/TokenFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DAppToken",
        name: "_dappToken",
        type: "address",
      },
      {
        internalType: "contract LPToken",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DynamicRewardsToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "RewardPerBlockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxReward",
        type: "uint256",
      },
    ],
    name: "RewardRangeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocksPassed",
        type: "uint256",
      },
    ],
    name: "RewardsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "processed",
        type: "uint256",
      },
    ],
    name: "RewardsDistributedAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dappToken",
    outputs: [
      {
        internalType: "contract DAppToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeRewardsAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dynamicRewards",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract LPToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "pendingRewardsView",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setDynamicRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "setFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "setRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxReward",
        type: "uint256",
      },
    ],
    name: "setRewardRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakersInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "checkpoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingRewards",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasStaked",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isStaking",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052601760809081527f50726f706f7274696f6e616c20546f6b656e204661726d00000000000000000060a05260009061003c9082610293565b5034801561004957600080fd5b5060405161171738038061171783398101604081905261006891610369565b6001600160a01b0386161580159061008857506001600160a01b03851615155b6100c85760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b60448201526064015b60405180910390fd5b8383111580156100d85750818411155b6101245760405162461bcd60e51b815260206004820152601460248201527f496e76616c6964207265776172642072616e676500000000000000000000000060448201526064016100bf565b6127108111156101635760405162461bcd60e51b815260206004820152600a602482015269466565203e203130302560b01b60448201526064016100bf565b600280546001600160a01b03199081166001600160a01b03898116919091179092556003805482169288169290921790915560018054339216821790556004859055600584905560068390556007805460ff1916905560098290556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050505050506103c7565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061021e57607f821691505b60208210810361023e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028e57806000526020600020601f840160051c8101602085101561026b5750805b601f840160051c820191505b8181101561028b5760008155600101610277565b50505b505050565b81516001600160401b038111156102ac576102ac6101f4565b6102c0816102ba845461020a565b84610244565b6020601f8211600181146102f457600083156102dc5750848201515b600019600385901b1c1916600184901b17845561028b565b600084815260208120601f198516915b828110156103245787850151825560209485019460019092019101610304565b50848210156103425786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b038116811461036657600080fd5b50565b60008060008060008060c0878903121561038257600080fd5b865161038d81610351565b602088015190965061039e81610351565b6040880151606089015160808a015160a0909a0151989b929a5090989097909650945092505050565b611341806103d66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637fd6f15c116100c3578063bb872b4a1161007c578063bb872b4a14610301578063db03e22714610314578063e766c8351461031c578063f2fde38b14610325578063fd5e6dd114610338578063ffd14bc21461034b57600080fd5b80637fd6f15c146102495780638ae39cac146102525780638da5cb5b1461025b578063943a18951461026e578063aba78c1614610281578063b6b55f25146102ee57600080fd5b8063476343ee11610115578063476343ee146101ca578063587f5ed7146101d25780635eb186f8146101db5780635fcbd285146102065780637ce3489b146102195780637ed7a7e11461022c57600080fd5b806306fdde031461015d57806309be19f91461017b57806311beef2814610192578063372500ab146101a75780633ccfd60b146101af5780633de34a3d146101b7575b600080fd5b610165610354565b60405161017291906110ea565b60405180910390f35b61018460055481565b604051908152602001610172565b6101a56101a0366004611149565b6103e2565b005b6101a561045d565b6101a56105f3565b6101a56101c5366004611166565b610779565b6101a5610857565b610184600a5481565b6002546101ee906001600160a01b031681565b6040516001600160a01b039091168152602001610172565b6003546101ee906001600160a01b031681565b6101a5610227366004611188565b610973565b6007546102399060ff1681565b6040519015158152602001610172565b61018460095481565b61018460045481565b6001546101ee906001600160a01b031681565b61018461027c3660046111a1565b610a1a565b6102c261028f3660046111a1565b600c6020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b60408051958652602086019490945292840191909152151560608301521515608082015260a001610172565b6101a56102fc366004611188565b610ac4565b6101a561030f366004611188565b610c70565b6101a5610d27565b61018460085481565b6101a56103333660046111a1565b610e24565b6101ee610346366004611188565b610eec565b61018460065481565b60008054610361906111ca565b80601f016020809104026020016040519081016040528092919081815260200182805461038d906111ca565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b505050505081565b6001546001600160a01b031633146104155760405162461bcd60e51b815260040161040c90611204565b60405180910390fd5b6007805460ff19168215159081179091556040519081527ffc74de8d3ec7d7da413aec6dbec19cfa59e26c7cf0d07839cd9db4c867c5d2eb906020015b60405180910390a150565b336000908152600c6020526040902060030154610100900460ff166104b25760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207374616b696e6760a81b604482015260640161040c565b336000908152600c602052604090206002810154806105005760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161040c565b600061271060095483610513919061123e565b61051d9190611271565b9050600061052b8284611285565b90506000846002018190555081600a60008282546105499190611298565b90915550506002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b505060408051848152602081018690523393507fdacbdde355ba930696a362ea6738feb9f8bd52dfb3d81947558fd3217e23e32592500160405180910390a250505050565b336000908152600c6020526040902060030154610100900460ff166106485760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207374616b696e6760a81b604482015260640161040c565b336000908152600c602052604090208054806106925760405162461bcd60e51b8152602060048201526009602482015268042616c616e63653d360bc1b604482015260640161040c565b61069b33610f16565b6000808355600880548392906106b2908490611285565b90915550506003828101805461ff00191690555460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610714573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073891906112ab565b5043600183015560405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b6001546001600160a01b031633146107a35760405162461bcd60e51b815260040161040c90611204565b6000821180156107b35750818110155b6107ef5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b604482015260640161040c565b600582905560068190556004548211156108095760048290555b8060045411156108195760048190555b60408051838152602081018390527f8d7cd90761f23af2912b733d2169842022827f4cfb9d94750ffadd9002364efb91015b60405180910390a15050565b6001546001600160a01b031633146108815760405162461bcd60e51b815260040161040c90611204565b6000600a54116108bd5760405162461bcd60e51b81526020600482015260076024820152664e6f206665657360c81b604482015260640161040c565b600a805460009091556002546001546040516340c10f1960e01b81526001600160a01b039182166004820152602481018490529116906340c10f1990604401600060405180830381600087803b15801561091657600080fd5b505af115801561092a573d6000803e3d6000fd5b50506001546040518481526001600160a01b0390911692507fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a915060200160405180910390a250565b6001546001600160a01b0316331461099d5760405162461bcd60e51b815260040161040c90611204565b6127108111156109dc5760405162461bcd60e51b815260206004820152600a602482015269466565203e203130302560b01b604482015260640161040c565b600980549082905560408051828152602081018490527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910161084b565b6001600160a01b0381166000908152600c602052604081206001810154801580610a445750804311155b80610a4f5750600854155b80610a5957508154155b15610a6957506002015492915050565b6000610a758243611285565b90506000610a84868443611020565b600854855491925090610a97848461123e565b610aa1919061123e565b610aab9190611271565b8460020154610aba9190611298565b9695505050505050565b60008111610aff5760405162461bcd60e51b81526020600482015260086024820152670416d6f756e743d360c41b604482015260640161040c565b336000818152600c6020526040902090610b1890610f16565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9391906112ab565b5081816000016000828254610ba89190611298565b925050819055508160086000828254610bc19190611298565b9091555050600381015460ff16610c2557600b8054600181810183556000929092527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319163317905560038201805460ff191690911790555b60038101805461ff00191661010017905543600182015560405133907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49061076d9085815260200190565b6001546001600160a01b03163314610c9a5760405162461bcd60e51b815260040161040c90611204565b6005548110158015610cae57506006548111155b610ce95760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015260640161040c565b600480549082905560408051828152602081018490527f842e6f2b482c6f39924c8be7b71d40631362ef78f833f0371ceb2649edc5fb10910161084b565b6001546001600160a01b03163314610d515760405162461bcd60e51b815260040161040c90611204565b6000805b600b54811015610df3576000600b8281548110610d7457610d746112c8565b60009182526020808320909101546001600160a01b0316808352600c909152604090912060038101549192509060ff610100909104168015610db65750805415155b15610dd657610dc482610f16565b83610dce816112de565b945050610de9565b8060010154600003610de9574360018201555b5050600101610d55565b506040518181527fc0b7c32b2f7bf30685be9ade07e89add11ba5dde80208a672b1fab63ef78914390602001610452565b6001546001600160a01b03163314610e4e5760405162461bcd60e51b815260040161040c90611204565b6001600160a01b038116610e905760405162461bcd60e51b81526020600482015260096024820152682d32b9379030b2323960b91b604482015260640161040c565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600b8181548110610efc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600c602052604090206001810154801580610f405750804311155b80610f4b5750600854155b80610f5557508154155b15610f6557504360019091015550565b6000610f718243611285565b90506000610f80858443611037565b6008548554919250600091610f95858561123e565b610f9f919061123e565b610fa99190611271565b9050801561100f5780856002016000828254610fc59190611298565b909155505060408051828152602081018590526001600160a01b038816917fe4e801442ed461792c0bdfa7f5c25444d391d67d68422437bd9005796c67cb23910160405180910390a25b438560010181905550505050505050565b600061102d848484611037565b90505b9392505050565b60075460009060ff1661104d5750600454611030565b600060055460065461105f9190611285565b905080600003611073575050600554611030565b6040516bffffffffffffffffffffffff1930606090811b8216602084015287901b166034820152604881018590526068810184905260009060880160408051601f19818403018152919052805160209091012090506110d3826001611298565b6110dd90826112f7565b600554610aba9190611298565b602081526000825180602084015260005b8181101561111857602081860181015160408684010152016110fb565b506000604082850101526040601f19601f83011684010191505092915050565b801515811461114657600080fd5b50565b60006020828403121561115b57600080fd5b813561103081611138565b6000806040838503121561117957600080fd5b50508035926020909101359150565b60006020828403121561119a57600080fd5b5035919050565b6000602082840312156111b357600080fd5b81356001600160a01b038116811461103057600080fd5b600181811c908216806111de57607f821691505b6020821081036111fe57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761125557611255611228565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826112805761128061125b565b500490565b8181038181111561125557611255611228565b8082018082111561125557611255611228565b6000602082840312156112bd57600080fd5b815161103081611138565b634e487b7160e01b600052603260045260246000fd5b6000600182016112f0576112f0611228565b5060010190565b6000826113065761130661125b565b50069056fea26469706673582212200276e8d6363dfa877d865c3e994da471de1d84b7f19311d913a2577ca732fdfc64736f6c634300081c0033";

type TokenFarmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFarmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFarm__factory extends ContractFactory {
  constructor(...args: TokenFarmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _dappToken: AddressLike,
    _lpToken: AddressLike,
    _initialReward: BigNumberish,
    _minReward: BigNumberish,
    _maxReward: BigNumberish,
    _feePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _dappToken,
      _lpToken,
      _initialReward,
      _minReward,
      _maxReward,
      _feePercent,
      overrides || {}
    );
  }
  override deploy(
    _dappToken: AddressLike,
    _lpToken: AddressLike,
    _initialReward: BigNumberish,
    _minReward: BigNumberish,
    _maxReward: BigNumberish,
    _feePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _dappToken,
      _lpToken,
      _initialReward,
      _minReward,
      _maxReward,
      _feePercent,
      overrides || {}
    ) as Promise<
      TokenFarm & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenFarm__factory {
    return super.connect(runner) as TokenFarm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFarmInterface {
    return new Interface(_abi) as TokenFarmInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenFarm {
    return new Contract(address, _abi, runner) as unknown as TokenFarm;
  }
}
